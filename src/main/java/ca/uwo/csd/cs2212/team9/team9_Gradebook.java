package ca.uwo.csd.cs2212.team9;

import java.awt.AWTException;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.BorderFactory;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import static javax.swing.JTable.AUTO_RESIZE_OFF;
import javax.swing.KeyStroke;
import javax.swing.WindowConstants;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.text.PlainDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;

/**
 * 
 * @author Team 9
 */
public class team9_Gradebook extends javax.swing.JFrame {

	private static Gradebook gradebook;
	private Student editStudent;
	private Deliverable editDeliverable;
	private CardLayout cl;

	/**
	 * Creates new form team9_Gradebook
	 */
	public team9_Gradebook() {
		gradebook = new Gradebook();
		initComponents();
		activeCoursePanel.setVisible(false);
		cl = (CardLayout) (inputPanel.getLayout());
		gradebookScrollPane.setBorder(BorderFactory.createEmptyBorder());
		openDAT();
		addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosing(WindowEvent we) {
				saveDAT("");
				System.exit(0);
			}
		});
	}

	public static Gradebook getGradebook() {
		return gradebook;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        addDeliverableTypeButtonGroup = new javax.swing.ButtonGroup();
        editDeliverableTypeButtonGroup = new javax.swing.ButtonGroup();
        about_dialog = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        about_message = new javax.swing.JTextArea();
        instruc_dialog = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        instruct_message = new javax.swing.JTextArea();
        inputPanel = new javax.swing.JPanel();
        noInputPanel = new javax.swing.JPanel();
        addCourseButton = new javax.swing.JButton();
        activeCourseComboBox = new javax.swing.JComboBox();
        setActiveCourseLabel = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        addCoursePanel = new javax.swing.JPanel();
        addCourseInstructionLabel = new javax.swing.JLabel();
        addCourseCodeLabel = new javax.swing.JLabel();
        addCourseTitleLabel = new javax.swing.JLabel();
        addCourseTermLabel = new javax.swing.JLabel();
        addCourseCodeText = new javax.swing.JTextField();
        addCourseTitleText = new javax.swing.JTextField();
        addCourseTermText = new javax.swing.JTextField();
        addCourseAddButton = new javax.swing.JButton();
        addCourseCancelButton = new javax.swing.JButton();
        editCoursePanel = new javax.swing.JPanel();
        editCourseInstructionLabel = new javax.swing.JLabel();
        editCourseCodeLabel = new javax.swing.JLabel();
        editCourseTitleLabel = new javax.swing.JLabel();
        editCourseTermLabel = new javax.swing.JLabel();
        editCourseCodeText = new javax.swing.JTextField();
        editCourseTitleText = new javax.swing.JTextField();
        editCourseTermText = new javax.swing.JTextField();
        editCourseEditButton = new javax.swing.JButton();
        editCourseCancelButton = new javax.swing.JButton();
        addStudentPanel = new javax.swing.JPanel();
        addStudentInstructionLabel = new javax.swing.JLabel();
        addStudentNumberLabel = new javax.swing.JLabel();
        addStudentFirstNameLabel = new javax.swing.JLabel();
        addStudentLastNameLabel = new javax.swing.JLabel();
        addStudentEmailLabel = new javax.swing.JLabel();
        addStudentNumberText = new javax.swing.JTextField();
        addStudentFirstNameText = new javax.swing.JTextField();
        addStudentLastNameText = new javax.swing.JTextField();
        addStudentEmailText = new javax.swing.JTextField();
        addStudentAddButton = new javax.swing.JButton();
        addStudentCancelButton = new javax.swing.JButton();
        editStudentPanel = new javax.swing.JPanel();
        editStudentInstructionLabel = new javax.swing.JLabel();
        editStudentNumberLabel = new javax.swing.JLabel();
        editStudentFirstNameLabel = new javax.swing.JLabel();
        editStudentLastNameLabel = new javax.swing.JLabel();
        editStudentEmailLabel = new javax.swing.JLabel();
        editStudentNumberText = new javax.swing.JTextField();
        editStudentFirstNameText = new javax.swing.JTextField();
        editStudentLastNameText = new javax.swing.JTextField();
        editStudentEmailText = new javax.swing.JTextField();
        editStudentEditButton = new javax.swing.JButton();
        editStudentCancelButton = new javax.swing.JButton();
        editStudentDeleteButton = new javax.swing.JButton();
        addDeliverablePanel = new javax.swing.JPanel();
        addDeliverableInstructionLabel = new javax.swing.JLabel();
        addDeliverableNameLabel = new javax.swing.JLabel();
        addDeliverableTypeLabel = new javax.swing.JLabel();
        addDeliverableWeightLabel = new javax.swing.JLabel();
        addDeliverablePercentLabel = new javax.swing.JLabel();
        addDeliverableNameText = new javax.swing.JTextField();
        addDeliverableWeightText = new javax.swing.JTextField();
        addDeliverableAddButton = new javax.swing.JButton();
        addDeliverableCancelButton = new javax.swing.JButton();
        addDeliverableExamRadioButton = new javax.swing.JRadioButton();
        addDeliverableAssignmentRadioButton = new javax.swing.JRadioButton();
        editDeliverablePanel = new javax.swing.JPanel();
        editDeliverableInstructionLabel = new javax.swing.JLabel();
        editDeliverableNameLabel = new javax.swing.JLabel();
        editDeliverableTypeLabel = new javax.swing.JLabel();
        editDeliverableWeightLabel = new javax.swing.JLabel();
        editDeliverablePercentLabel = new javax.swing.JLabel();
        editDeliverableNameText = new javax.swing.JTextField();
        editDeliverableWeightText = new javax.swing.JTextField();
        editDeliverableEditButton = new javax.swing.JButton();
        editDeliverableCancelButton = new javax.swing.JButton();
        editDeliverableDeleteButton = new javax.swing.JButton();
        editDeliverableExamRadioButton = new javax.swing.JRadioButton();
        editDeliverableAssignmentRadioButton = new javax.swing.JRadioButton();
        editMailPropertiesPanel = new javax.swing.JPanel();
        editEmailInstructionLabel = new javax.swing.JLabel();
        editHostLabel = new javax.swing.JLabel();
        editUsernameLabel = new javax.swing.JLabel();
        editPasswordLabel = new javax.swing.JLabel();
        editSenderNameLabel = new javax.swing.JLabel();
        editSenderEmailLabel = new javax.swing.JLabel();
        editPortLabel = new javax.swing.JLabel();
        editHostText = new javax.swing.JTextField();
        editUsernameText = new javax.swing.JTextField();
        editPasswordText = new javax.swing.JTextField();
        editSenderNameText = new javax.swing.JTextField();
        editSenderEmailText = new javax.swing.JTextField();
        editPortText = new javax.swing.JTextField();
        editEmailEditButton = new javax.swing.JButton();
        editEmailCancelButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        activeCoursePanel = new javax.swing.JPanel();
        activeCourseLabel = new javax.swing.JLabel();
        editCourseButton = new javax.swing.JButton();
        deleteCourseButton = new javax.swing.JButton();
        addDeliverableButton = new javax.swing.JButton();
        addStudentButton = new javax.swing.JButton();
        importStudentsButton = new javax.swing.JButton();
        importGradesButton = new javax.swing.JButton();
        generateReportButton = new javax.swing.JButton();
        emailStudentButton = new javax.swing.JButton();
        exportGradesButton = new javax.swing.JButton();
        gradebookScrollPane = new javax.swing.JScrollPane();
        gradebookTable = new javax.swing.JTable();
        menu = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();
        instructions = new javax.swing.JMenuItem();
        mailPropertiesMenu = new javax.swing.JMenu();
        mailProps = new javax.swing.JMenuItem();

        about_dialog.setSize(400,300);
        about_dialog.setResizable(true);

        about_message.setColumns(20);
        about_message.setEditable(false);
        about_message.setRows(5);
        about_message.setText("About this program:\nDesigned and developed by Team 9");
        jScrollPane1.setViewportView(about_message);

        javax.swing.GroupLayout about_dialogLayout = new javax.swing.GroupLayout(about_dialog.getContentPane());
        about_dialog.getContentPane().setLayout(about_dialogLayout);
        about_dialogLayout.setHorizontalGroup(
            about_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(about_dialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        about_dialogLayout.setVerticalGroup(
            about_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(about_dialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        instruc_dialog.setSize(400,300);
        instruc_dialog.setResizable(true);

        instruct_message.setColumns(20);
        instruct_message.setEditable(false);
        instruct_message.setRows(5);
        instruct_message.setText("Instruction to use this program: \n\nTo delete a student:\n- Choose the student by selecting the row\n- Press \"Delete\" key\n\nTo Add a course: \n- Click Add course \n- Enter valid information \n\nTo delete a deliverable:\n- Select the deliverable column \n- Press \"Delete\" key");
        jScrollPane2.setViewportView(instruct_message);

        javax.swing.GroupLayout instruc_dialogLayout = new javax.swing.GroupLayout(instruc_dialog.getContentPane());
        instruc_dialog.getContentPane().setLayout(instruc_dialogLayout);
        instruc_dialogLayout.setHorizontalGroup(
            instruc_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instruc_dialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                .addContainerGap())
        );
        instruc_dialogLayout.setVerticalGroup(
            instruc_dialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(instruc_dialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Gradebook - Team 9");
        setMinimumSize(new java.awt.Dimension(1100, 800));
        setPreferredSize(new java.awt.Dimension(885, 751));

        inputPanel.setPreferredSize(new java.awt.Dimension(350, 181));
        inputPanel.setLayout(new java.awt.CardLayout());

        noInputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        addCourseButton.setText("Add Course");
        addCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseButtonActionPerformed(evt);
            }
        });

        activeCourseComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activeCourseComboBoxActionPerformed(evt);
            }
        });

        setActiveCourseLabel.setText("Set Active Course:");

        titleLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleLabel.setText("Team 9 Gradebook");

        javax.swing.GroupLayout noInputPanelLayout = new javax.swing.GroupLayout(noInputPanel);
        noInputPanel.setLayout(noInputPanelLayout);
        noInputPanelLayout.setHorizontalGroup(
            noInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(noInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(noInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activeCourseComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(noInputPanelLayout.createSequentialGroup()
                        .addGroup(noInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseButton)
                            .addComponent(setActiveCourseLabel)
                            .addComponent(titleLabel))
                        .addGap(0, 172, Short.MAX_VALUE)))
                .addContainerGap())
        );
        noInputPanelLayout.setVerticalGroup(
            noInputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, noInputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addComponent(addCourseButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(setActiveCourseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(activeCourseComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        inputPanel.add(noInputPanel, "noInputPanel");

        addCoursePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Course"));

        addCourseInstructionLabel.setText("Enter Course Information:");

        addCourseCodeLabel.setText("Course Code:");

        addCourseTitleLabel.setText("Course Title:");

        addCourseTermLabel.setText("Course Term:");

        addCourseCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseCodeTextActionPerformed(evt);
            }
        });

        addCourseTitleText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseTitleTextActionPerformed(evt);
            }
        });

        addCourseTermText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseTermTextActionPerformed(evt);
            }
        });

        addCourseAddButton.setText("Add");
        addCourseAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseAddButtonActionPerformed(evt);
            }
        });

        addCourseCancelButton.setText("Cancel");
        addCourseCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCoursePanelLayout = new javax.swing.GroupLayout(addCoursePanel);
        addCoursePanel.setLayout(addCoursePanelLayout);
        addCoursePanelLayout.setHorizontalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCourseInstructionLabel)
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addCourseTermLabel)
                            .addComponent(addCourseTitleLabel)
                            .addComponent(addCourseCodeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseTitleText, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCourseTermText, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addCourseCodeText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addCoursePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addCourseAddButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCourseCancelButton)
                .addGap(21, 21, 21))
        );
        addCoursePanelLayout.setVerticalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(addCourseInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseCodeLabel)
                    .addComponent(addCourseCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseTitleLabel)
                    .addComponent(addCourseTitleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseTermLabel)
                    .addComponent(addCourseTermText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addCourseAddButton)
                    .addComponent(addCourseCancelButton)))
        );

        inputPanel.add(addCoursePanel, "addCoursePanel");

        editCoursePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Course"));

        editCourseInstructionLabel.setText("Edit Course Information:");

        editCourseCodeLabel.setText("Course Code:");

        editCourseTitleLabel.setText("Course Title:");

        editCourseTermLabel.setText("Course Term:");

        editCourseCodeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseCodeTextActionPerformed(evt);
            }
        });

        editCourseTitleText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseTitleTextActionPerformed(evt);
            }
        });

        editCourseTermText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseTermTextActionPerformed(evt);
            }
        });

        editCourseEditButton.setText("Edit");
        editCourseEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseEditButtonActionPerformed(evt);
            }
        });

        editCourseCancelButton.setText("Cancel");
        editCourseCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editCoursePanelLayout = new javax.swing.GroupLayout(editCoursePanel);
        editCoursePanel.setLayout(editCoursePanelLayout);
        editCoursePanelLayout.setHorizontalGroup(
            editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editCourseInstructionLabel)
                    .addGroup(editCoursePanelLayout.createSequentialGroup()
                        .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editCourseTermLabel)
                            .addComponent(editCourseTitleLabel)
                            .addComponent(editCourseCodeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editCourseTitleText, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editCourseTermText, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editCourseCodeText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(57, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editCoursePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editCourseEditButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editCourseCancelButton)
                .addGap(21, 21, 21))
        );
        editCoursePanelLayout.setVerticalGroup(
            editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editCoursePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(editCourseInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editCourseCodeLabel)
                    .addComponent(editCourseCodeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editCourseTitleLabel)
                    .addComponent(editCourseTitleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editCourseTermLabel)
                    .addComponent(editCourseTermText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(editCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editCourseEditButton)
                    .addComponent(editCourseCancelButton)))
        );

        inputPanel.add(editCoursePanel, "editCoursePanel");

        addStudentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Student"));

        addStudentInstructionLabel.setText("Enter Student Information:");

        addStudentNumberLabel.setText("Student Number:");

        addStudentFirstNameLabel.setText("First Name:");

        addStudentLastNameLabel.setText("Last Name:");

        addStudentEmailLabel.setText("E-mail:");

        addStudentNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentNumberTextActionPerformed(evt);
            }
        });
        addStudentNumberText.setDocument (new JTextFieldLimit(9));

        addStudentFirstNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentFirstNameTextActionPerformed(evt);
            }
        });
        addStudentFirstNameText.setDocument (new JTextFieldLimit(100));

        addStudentLastNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentLastNameTextActionPerformed(evt);
            }
        });
        addStudentLastNameText.setDocument (new JTextFieldLimit(100));

        addStudentEmailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentEmailTextActionPerformed(evt);
            }
        });
        addStudentEmailText.setDocument (new JTextFieldLimit(100));

        addStudentAddButton.setText("Add");
        addStudentAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentAddButtonActionPerformed(evt);
            }
        });

        addStudentCancelButton.setText("Cancel");
        addStudentCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addStudentAddButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addStudentCancelButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addStudentInstructionLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addStudentPanelLayout.createSequentialGroup()
                                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(addStudentLastNameLabel)
                                    .addComponent(addStudentFirstNameLabel)
                                    .addComponent(addStudentNumberLabel)
                                    .addComponent(addStudentEmailLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(addStudentEmailText)
                                    .addComponent(addStudentFirstNameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(addStudentLastNameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(addStudentNumberText, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addStudentInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentNumberLabel)
                    .addComponent(addStudentNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentFirstNameLabel)
                    .addComponent(addStudentFirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentLastNameLabel)
                    .addComponent(addStudentLastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentEmailLabel)
                    .addComponent(addStudentEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addStudentAddButton)
                    .addComponent(addStudentCancelButton)))
        );

        inputPanel.add(addStudentPanel, "addStudentPanel");

        editStudentPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Student"));

        editStudentInstructionLabel.setText("Enter Student Information:");

        editStudentNumberLabel.setText("Student Number:");

        editStudentFirstNameLabel.setText("First Name:");

        editStudentLastNameLabel.setText("Last Name:");

        editStudentEmailLabel.setText("E-mail:");

        editStudentNumberText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentNumberTextActionPerformed(evt);
            }
        });

        editStudentFirstNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentFirstNameTextActionPerformed(evt);
            }
        });

        editStudentLastNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentLastNameTextActionPerformed(evt);
            }
        });

        editStudentEmailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentEmailTextActionPerformed(evt);
            }
        });

        editStudentEditButton.setText("Edit");
        editStudentEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentEditButtonActionPerformed(evt);
            }
        });

        editStudentCancelButton.setText("Cancel");
        editStudentCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentCancelButtonActionPerformed(evt);
            }
        });

        editStudentDeleteButton.setText("Remove Student");
        editStudentDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editStudentDeleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editStudentPanelLayout = new javax.swing.GroupLayout(editStudentPanel);
        editStudentPanel.setLayout(editStudentPanelLayout);
        editStudentPanelLayout.setHorizontalGroup(
            editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editStudentPanelLayout.createSequentialGroup()
                        .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editStudentInstructionLabel, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, editStudentPanelLayout.createSequentialGroup()
                                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(editStudentLastNameLabel)
                                    .addComponent(editStudentFirstNameLabel)
                                    .addComponent(editStudentNumberLabel)
                                    .addComponent(editStudentEmailLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(editStudentEmailText)
                                    .addComponent(editStudentFirstNameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(editStudentLastNameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(editStudentNumberText, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editStudentPanelLayout.createSequentialGroup()
                        .addComponent(editStudentDeleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(editStudentEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editStudentCancelButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        editStudentPanelLayout.setVerticalGroup(
            editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(editStudentInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editStudentNumberLabel)
                    .addComponent(editStudentNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editStudentFirstNameLabel)
                    .addComponent(editStudentFirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editStudentLastNameLabel)
                    .addComponent(editStudentLastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editStudentEmailLabel)
                    .addComponent(editStudentEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(editStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editStudentEditButton)
                    .addComponent(editStudentCancelButton)
                    .addComponent(editStudentDeleteButton)))
        );

        inputPanel.add(editStudentPanel, "editStudentPanel");

        addDeliverablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Deliverable"));

        addDeliverableInstructionLabel.setText("Enter Deliverable Information:");

        addDeliverableNameLabel.setText("Deliverable Name:");

        addDeliverableTypeLabel.setText("Deliverable Type:");

        addDeliverableWeightLabel.setText("Weight:");

        addDeliverablePercentLabel.setText("%");

        addDeliverableWeightText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeliverableWeightTextActionPerformed(evt);
            }
        });

        addDeliverableAddButton.setText("Add");
        addDeliverableAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeliverableAddButtonActionPerformed(evt);
            }
        });

        addDeliverableCancelButton.setText("Cancel");
        addDeliverableCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeliverableCancelButtonActionPerformed(evt);
            }
        });

        addDeliverableTypeButtonGroup.add(addDeliverableExamRadioButton);
        addDeliverableExamRadioButton.setText("Exam");

        addDeliverableTypeButtonGroup.add(addDeliverableAssignmentRadioButton);
        addDeliverableAssignmentRadioButton.setText("Assignment");

        javax.swing.GroupLayout addDeliverablePanelLayout = new javax.swing.GroupLayout(addDeliverablePanel);
        addDeliverablePanel.setLayout(addDeliverablePanelLayout);
        addDeliverablePanelLayout.setHorizontalGroup(
            addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDeliverablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addDeliverableInstructionLabel)
                    .addGroup(addDeliverablePanelLayout.createSequentialGroup()
                        .addGroup(addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(addDeliverableTypeLabel)
                            .addComponent(addDeliverableNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(addDeliverableNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(addDeliverablePanelLayout.createSequentialGroup()
                                    .addComponent(addDeliverableWeightLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(addDeliverableWeightText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(addDeliverablePercentLabel)))
                            .addGroup(addDeliverablePanelLayout.createSequentialGroup()
                                .addComponent(addDeliverableExamRadioButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addDeliverableAssignmentRadioButton)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addDeliverablePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addDeliverableAddButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addDeliverableCancelButton)
                .addGap(21, 21, 21))
        );
        addDeliverablePanelLayout.setVerticalGroup(
            addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addDeliverablePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(addDeliverableInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDeliverableNameLabel)
                    .addComponent(addDeliverableNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDeliverableTypeLabel)
                    .addComponent(addDeliverableExamRadioButton)
                    .addComponent(addDeliverableAssignmentRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDeliverableWeightLabel)
                    .addComponent(addDeliverableWeightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDeliverablePercentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(addDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDeliverableAddButton)
                    .addComponent(addDeliverableCancelButton)))
        );

        inputPanel.add(addDeliverablePanel, "addDeliverablePanel");

        editDeliverablePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Deliverable"));

        editDeliverableInstructionLabel.setText("Enter Deliverable Information:");

        editDeliverableNameLabel.setText("Deliverable Name:");

        editDeliverableTypeLabel.setText("Deliverable Type:");

        editDeliverableWeightLabel.setText("Weight:");

        editDeliverablePercentLabel.setText("%");

        editDeliverableEditButton.setText("Edit");
        editDeliverableEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDeliverableEditButtonActionPerformed(evt);
            }
        });

        editDeliverableCancelButton.setText("Cancel");
        editDeliverableCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDeliverableCancelButtonActionPerformed(evt);
            }
        });

        editDeliverableDeleteButton.setText("Delete Deliverable");
        editDeliverableDeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editDeliverableDeleteButtonActionPerformed(evt);
            }
        });

        editDeliverableTypeButtonGroup.add(editDeliverableExamRadioButton);
        editDeliverableExamRadioButton.setText("Exam");

        editDeliverableTypeButtonGroup.add(editDeliverableAssignmentRadioButton);
        editDeliverableAssignmentRadioButton.setText("Assignment");

        javax.swing.GroupLayout editDeliverablePanelLayout = new javax.swing.GroupLayout(editDeliverablePanel);
        editDeliverablePanel.setLayout(editDeliverablePanelLayout);
        editDeliverablePanelLayout.setHorizontalGroup(
            editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDeliverablePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editDeliverablePanelLayout.createSequentialGroup()
                        .addGroup(editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editDeliverableInstructionLabel)
                            .addGroup(editDeliverablePanelLayout.createSequentialGroup()
                                .addGroup(editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(editDeliverableTypeLabel)
                                    .addComponent(editDeliverableNameLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(editDeliverableNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(editDeliverablePanelLayout.createSequentialGroup()
                                        .addComponent(editDeliverableWeightLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editDeliverableWeightText, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editDeliverablePercentLabel))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, editDeliverablePanelLayout.createSequentialGroup()
                                        .addComponent(editDeliverableExamRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(editDeliverableAssignmentRadioButton)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editDeliverablePanelLayout.createSequentialGroup()
                        .addComponent(editDeliverableDeleteButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editDeliverableEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editDeliverableCancelButton)
                        .addGap(21, 21, 21))))
        );
        editDeliverablePanelLayout.setVerticalGroup(
            editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editDeliverablePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(editDeliverableInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDeliverableNameLabel)
                    .addComponent(editDeliverableNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDeliverableExamRadioButton)
                    .addComponent(editDeliverableAssignmentRadioButton)
                    .addComponent(editDeliverableTypeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDeliverableWeightLabel)
                    .addComponent(editDeliverableWeightText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editDeliverablePercentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(editDeliverablePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editDeliverableEditButton)
                    .addComponent(editDeliverableCancelButton)
                    .addComponent(editDeliverableDeleteButton)))
        );

        inputPanel.add(editDeliverablePanel, "editDeliverablePanel");

        editMailPropertiesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Email Properties"));

        editEmailInstructionLabel.setText("Enter Email Information:");

        editHostLabel.setText("SMTP Server:");

        editUsernameLabel.setText("Username");

        editPasswordLabel.setText("Password");

        editSenderNameLabel.setText("Sender Name");

        editSenderEmailLabel.setText("Sender Email");

        editPortLabel.setText("Port");

        editHostText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editHostTextActionPerformed(evt);
            }
        });

        editUsernameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUsernameTextActionPerformed(evt);
            }
        });

        editPasswordText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPasswordTextActionPerformed(evt);
            }
        });

        editSenderNameText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSenderNameTextActionPerformed(evt);
            }
        });

        editSenderEmailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSenderEmailTextActionPerformed(evt);
            }
        });

        editPortText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPortTextActionPerformed(evt);
            }
        });

        editEmailEditButton.setText("Edit");
        editEmailEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEmailEditButtonActionPerformed(evt);
            }
        });

        editEmailCancelButton.setText("Cancel");
        editEmailCancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEmailCancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editMailPropertiesPanelLayout = new javax.swing.GroupLayout(editMailPropertiesPanel);
        editMailPropertiesPanel.setLayout(editMailPropertiesPanelLayout);
        editMailPropertiesPanelLayout.setHorizontalGroup(
            editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editMailPropertiesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editMailPropertiesPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editEmailEditButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editEmailCancelButton))
                    .addGroup(editMailPropertiesPanelLayout.createSequentialGroup()
                        .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editEmailInstructionLabel)
                            .addGroup(editMailPropertiesPanelLayout.createSequentialGroup()
                                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(editSenderEmailLabel)
                                    .addComponent(editPasswordLabel)
                                    .addComponent(editUsernameLabel)
                                    .addComponent(editHostLabel)
                                    .addComponent(editSenderNameLabel)
                                    .addComponent(editPortLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(editSenderNameText)
                                    .addComponent(editUsernameText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(editPasswordText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                                    .addComponent(editHostText, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(editSenderEmailText)
                                    .addComponent(editPortText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 74, Short.MAX_VALUE)))
                .addContainerGap())
        );
        editMailPropertiesPanelLayout.setVerticalGroup(
            editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editMailPropertiesPanelLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(editEmailInstructionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editHostLabel)
                    .addComponent(editHostText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editUsernameLabel)
                    .addComponent(editUsernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editPasswordLabel)
                    .addComponent(editPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editSenderNameLabel)
                    .addComponent(editSenderNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editSenderEmailLabel)
                    .addComponent(editSenderEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(editMailPropertiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(editEmailEditButton)
                            .addComponent(editEmailCancelButton))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editMailPropertiesPanelLayout.createSequentialGroup()
                            .addComponent(editPortText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(1, 1, 1)))
                    .addComponent(editPortLabel)))
        );

        inputPanel.add(editMailPropertiesPanel, "editMailPropertiesPanel");

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));

        activeCoursePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Active Course"));
        activeCoursePanel.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        activeCoursePanel.setPreferredSize(new java.awt.Dimension(289, 110));

        activeCourseLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        editCourseButton.setText("Edit Course");
        editCourseButton.setPreferredSize(new java.awt.Dimension(125, 23));
        editCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editCourseButtonActionPerformed(evt);
            }
        });

        deleteCourseButton.setText("Delete Course");
        deleteCourseButton.setPreferredSize(new java.awt.Dimension(125, 23));
        deleteCourseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCourseButtonActionPerformed(evt);
            }
        });

        addDeliverableButton.setText("Add Deliverable");
        addDeliverableButton.setPreferredSize(new java.awt.Dimension(125, 23));
        addDeliverableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeliverableButtonActionPerformed(evt);
            }
        });

        addStudentButton.setText("Add Student");
        addStudentButton.setPreferredSize(new java.awt.Dimension(125, 23));
        addStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentButtonActionPerformed(evt);
            }
        });

        importStudentsButton.setText("Import Students");
        importStudentsButton.setPreferredSize(new java.awt.Dimension(125, 23));
        importStudentsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importStudentsButtonActionPerformed(evt);
            }
        });

        importGradesButton.setText("Import Grades");
        importGradesButton.setPreferredSize(new java.awt.Dimension(125, 23));
        importGradesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importGradesButtonActionPerformed(evt);
            }
        });

        generateReportButton.setText("Generate Report");
        generateReportButton.setPreferredSize(new java.awt.Dimension(125, 23));
        generateReportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateReportButtonActionPerformed(evt);
            }
        });

        emailStudentButton.setText("Email Student(s)");
        emailStudentButton.setPreferredSize(new java.awt.Dimension(125, 23));
        emailStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailStudentButtonActionPerformed(evt);
            }
        });

        exportGradesButton.setText("Export Grades");
        exportGradesButton.setPreferredSize(new java.awt.Dimension(125, 23));
        exportGradesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportGradesButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout activeCoursePanelLayout = new javax.swing.GroupLayout(activeCoursePanel);
        activeCoursePanel.setLayout(activeCoursePanelLayout);
        activeCoursePanelLayout.setHorizontalGroup(
            activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(activeCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activeCourseLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(activeCoursePanelLayout.createSequentialGroup()
                        .addGroup(activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generateReportButton, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                            .addComponent(addStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editCourseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailStudentButton, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                            .addComponent(importStudentsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteCourseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addDeliverableButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                            .addComponent(importGradesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(exportGradesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );
        activeCoursePanelLayout.setVerticalGroup(
            activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, activeCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activeCourseLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addDeliverableButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteCourseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importGradesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(importStudentsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(activeCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(generateReportButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportGradesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9))
        );

        gradebookScrollPane.setBorder(null);

        gradebookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        gradebookTable.setCellSelectionEnabled(true);
        gradebookTable.setShowHorizontalLines(false);
        gradebookTable.getTableHeader().setResizingAllowed(false);
        gradebookTable.getTableHeader().setReorderingAllowed(false);
        gradebookScrollPane.setViewportView(gradebookTable);

        menuFile.setText("Backup");

        open.setText("Restore");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        menuFile.add(open);

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        menuFile.add(save);

        menu.add(menuFile);

        helpMenu.setText("Help");

        about.setText("About");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        helpMenu.add(about);

        instructions.setText("Instructions");
        instructions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                instructionsActionPerformed(evt);
            }
        });
        helpMenu.add(instructions);

        menu.add(helpMenu);

        mailPropertiesMenu.setText("Properties");

        mailProps.setText("Email Properties");
        mailProps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mailPropsActionPerformed(evt);
            }
        });
        mailPropertiesMenu.add(mailProps);

        menu.add(mailPropertiesMenu);

        setJMenuBar(menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gradebookScrollPane)
                    .addComponent(errorLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(activeCoursePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(activeCoursePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gradebookScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void openActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_openActionPerformed
		JFileChooser fc = new JFileChooser();
		if (JFileChooser.APPROVE_OPTION == fc.showOpenDialog(this)) {
			try {
				ObjectInputStream in = new ObjectInputStream(
						new FileInputStream(fc.getSelectedFile()));
				Gradebook loadGB = (Gradebook) in.readObject();
				in.close();

				// It should be revised!!!
				gradebook = loadGB;
				generateMenu();

			} catch (IOException ex) {
				ex.printStackTrace();
			} catch (ClassNotFoundException clEx) {
				clEx.printStackTrace();
			}
		}
	}// GEN-LAST:event_openActionPerformed

	private void saveActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveActionPerformed
		JFileChooser fc = new JFileChooser();
		if (JFileChooser.APPROVE_OPTION == fc.showSaveDialog(this)) {
			try {
				// Gradebook gradebook = .getGradebook();
				ObjectOutputStream out = new ObjectOutputStream(
						new FileOutputStream(fc.getSelectedFile() + ".dat"));
				out.writeObject(gradebook);
				out.close();
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}
	}// GEN-LAST:event_saveActionPerformed

	private void activeCourseComboBoxActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_activeCourseComboBoxActionPerformed

		Course activeCourse = (Course) activeCourseComboBox.getSelectedItem();
		try {
			gradebook.setActiveCourse(activeCourse);
			activeCoursePanel.setVisible(true);
			activeCourseLabel.setText("<html>" + activeCourse.getTitle() + " "
					+ activeCourse.getCode() + " " + activeCourse.getTerm()
					+ "</html>");
			generateMenu();
		} catch (ElementNotFoundException ex) {
			Logger.getLogger(team9_Gradebook.class.getName()).log(Level.SEVERE,
					null, ex);
		}
	}// GEN-LAST:event_activeCourseComboBoxActionPerformed

	private void addCourseCodeTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addCourseCodeTextActionPerformed
		addCourseTitleText.requestFocusInWindow();
	}// GEN-LAST:event_addCourseCodeTextActionPerformed

	private void addCourseTitleTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addCourseTitleTextActionPerformed
		addCourseTermText.requestFocusInWindow();
	}// GEN-LAST:event_addCourseTitleTextActionPerformed

	private void addCourseTermTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addCourseTermTextActionPerformed
		addCourseAddButtonActionPerformed(evt);
	}// GEN-LAST:event_addCourseTermTextActionPerformed

	private void addCourseAddButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addCourseAddButtonActionPerformed
		try {
			team9_Gradebook.getGradebook().addCourse(
					addCourseCodeText.getText().trim(),
					addCourseTitleText.getText().trim(),
					addCourseTermText.getText().trim());
			generateMenu();
			cl.show(inputPanel, "noInputPanel");
		} catch (InvalidInfoException ex) {
			if (ex.getMessage().contains("Invalid")) {
				if (ex.getMessage().contains("Code"))
					addCourseCodeLabel.setForeground(Color.red);
				else
					addCourseCodeLabel.setForeground(Color.black);
				if (ex.getMessage().contains("Title"))
					addCourseTitleLabel.setForeground(Color.red);
				else
					addCourseTitleLabel.setForeground(Color.black);
				if (ex.getMessage().contains("Term"))
					addCourseTermLabel.setForeground(Color.red);
				else
					addCourseTermLabel.setForeground(Color.black);
				errorLabel.setText("Please enter every course attribute.");
			} else if (ex.getMessage().contains("WARNING")) {
				Object[] options = { "Yes", "No" };
				int i = JOptionPane
						.showOptionDialog(
								null,
								"<html>Either the course code exists under a <br>"
										+ "different course title or the course title <br>"
										+ "entered exists with a different course code.<br><br>"
										+ "Would you like to add the course anyway?</html>",
								"WARNING:", JOptionPane.DEFAULT_OPTION,
								JOptionPane.WARNING_MESSAGE, null, options,
								options[0]);
				if (i == 0) {
					generateMenu();
					cl.show(inputPanel, "noInputPanel");
				} else {
					try {
						gradebook.delCourse(addCourseCodeText.getText().trim(),
								addCourseTitleText.getText().trim(),
								addCourseTermText.getText().trim());
					} catch (ElementNotFoundException ex1) {
						Logger.getLogger(team9_Gradebook.class.getName()).log(
								Level.SEVERE, null, ex1);
					}
				}
			} else {
				addCourseCodeLabel.setForeground(Color.red);
				addCourseTitleLabel.setForeground(Color.red);
				addCourseTermLabel.setForeground(Color.red);
				errorLabel.setText(ex.getMessage());
			}
		}
	}// GEN-LAST:event_addCourseAddButtonActionPerformed

	private void addCourseCancelButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addCourseCancelButtonActionPerformed
		cl.show(inputPanel, "noInputPanel");
		enableActiveCourseUI();
		errorLabel.setText("");
	}// GEN-LAST:event_addCourseCancelButtonActionPerformed

	private void editCourseEditButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editCourseEditButtonActionPerformed

		Course activeCourse = gradebook.getActiveCourse();
		String code = editCourseCodeText.getText();
		String title = editCourseTitleText.getText();
		String term = editCourseTermText.getText();
		try {
			gradebook
					.editCourse(activeCourse, editCourseCodeText.getText(),
							editCourseTitleText.getText(),
							editCourseTermText.getText());
			generateMenu();
			cl.show(inputPanel, "noInputPanel");
		} catch (InvalidInfoException ex) {
			if (ex.getMessage().contains("Invalid")) {
				if (ex.getMessage().contains("Code")) {
					editCourseCodeLabel.setForeground(Color.red);
				} else {
					editCourseCodeLabel.setForeground(Color.black);
				}
				if (ex.getMessage().contains("Title")) {
					editCourseTitleLabel.setForeground(Color.red);
				} else {
					editCourseTitleLabel.setForeground(Color.black);
				}
				if (ex.getMessage().contains("Term")) {
					editCourseTermLabel.setForeground(Color.red);
				} else {
					editCourseTermLabel.setForeground(Color.black);
				}
				errorLabel.setText("Please enter every course attribute.");
			} else if (ex.getMessage().contains("WARNING")) {
				Object[] options = { "Yes", "No" };
				int i = JOptionPane
						.showOptionDialog(
								null,
								"<html>Either the course code exists under a <br>"
										+ "different course title or the course title <br>"
										+ "entered exists with a different course code.<br><br>"
										+ "Would you like to add the course anyway?</html>",
								"WARNING:", JOptionPane.DEFAULT_OPTION,
								JOptionPane.WARNING_MESSAGE, null, options,
								options[0]);
				if (i == 0) {
					generateMenu();
					cl.show(inputPanel, "noInputPanel");
				} else {
					try {
						gradebook.getActiveCourse().setCode(code);
						gradebook.getActiveCourse().setTitle(title);
						gradebook.getActiveCourse().setTerm(term);
					} catch (InvalidInfoException e) {
						// this exception will never be executed because the
						// values code, title, and term
						// have already been established
					}
				}
			} else {
				editCourseCodeLabel.setForeground(Color.red);
				editCourseTitleLabel.setForeground(Color.red);
				editCourseTermLabel.setForeground(Color.red);
				errorLabel.setText(ex.getMessage());
			}
		}
	}// GEN-LAST:event_editCourseEditButtonActionPerformed

	private void editCourseCancelButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editCourseCancelButtonActionPerformed

		addCourseCancelButtonActionPerformed(evt);
	}// GEN-LAST:event_editCourseCancelButtonActionPerformed

	private void editDeliverableCancelButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editDeliverableCancelButtonActionPerformed

		addCourseCancelButtonActionPerformed(evt);
	}// GEN-LAST:event_editDeliverableCancelButtonActionPerformed

	private void deleteCourseButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteCourseButtonActionPerformed
		Object[] options = { "Yes", "No" };
		int i = JOptionPane.showOptionDialog(null,
				"Are you sure you want to delete "
						+ gradebook.getActiveCourse().toString() + "?",
				"WARNING:", JOptionPane.DEFAULT_OPTION,
				JOptionPane.WARNING_MESSAGE, null, options, options[0]);
		if (i == 0) {
			try {
				gradebook.delCourse(gradebook.getActiveCourse().getCode(),
						gradebook.getActiveCourse().getTitle(), gradebook
								.getActiveCourse().getTerm());
				;
				generateMenu();
			} catch (ElementNotFoundException ex) {
				Logger.getLogger(team9_Gradebook.class.getName()).log(
						Level.SEVERE, null, ex);
			}
		}
	}// GEN-LAST:event_deleteCourseButtonActionPerformed



	private void editCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editCourseButtonActionPerformed
		Course activeCourse = gradebook.getActiveCourse();
		editCourseCodeText.setText(activeCourse.getCode());
		editCourseTitleText.setText(activeCourse.getTitle());
		editCourseTermText.setText(activeCourse.getTerm());
		editCourseCodeLabel.setForeground(Color.black);
		editCourseTitleLabel.setForeground(Color.black);
		editCourseTermLabel.setForeground(Color.black);
		cl.show(inputPanel, "editCoursePanel");
		editCourseCodeText.requestFocusInWindow();
		disableActiveCourseUI();
	}// GEN-LAST:event_editCourseButtonActionPerformed

	private void editCourseCodeTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editCourseCodeTextActionPerformed
		editCourseTitleText.requestFocusInWindow();
	}// GEN-LAST:event_editCourseCodeTextActionPerformed

	private void editCourseTitleTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editCourseTitleTextActionPerformed
		editCourseTermText.requestFocusInWindow();
	}// GEN-LAST:event_editCourseTitleTextActionPerformed

	private void editCourseTermTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editCourseTermTextActionPerformed
		editCourseEditButtonActionPerformed(evt);
	}// GEN-LAST:event_editCourseTermTextActionPerformed

	private void addStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addStudentButtonActionPerformed
		addStudentNumberText.setText("");
		addStudentFirstNameText.setText("");
		addStudentLastNameText.setText("");
		addStudentEmailText.setText("");
		addStudentNumberLabel.setForeground(Color.black);
		addStudentFirstNameLabel.setForeground(Color.black);
		addStudentLastNameLabel.setForeground(Color.black);
		addStudentEmailLabel.setForeground(Color.black);
		cl.show(inputPanel, "addStudentPanel");
		addStudentNumberText.requestFocusInWindow();
		disableActiveCourseUI();
	}// GEN-LAST:event_addStudentButtonActionPerformed

	private void addDeliverableButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addDeliverableButtonActionPerformed
		addDeliverableNameText.setText("");
		addDeliverableTypeButtonGroup.clearSelection();
		addDeliverableWeightText.setText("");
		addDeliverableNameLabel.setForeground(Color.black);
		addDeliverableTypeLabel.setForeground(Color.black);
		addDeliverableWeightLabel.setForeground(Color.black);
		cl.show(inputPanel, "addDeliverablePanel");
		addDeliverableNameText.requestFocusInWindow();
		disableActiveCourseUI();
	}// GEN-LAST:event_addDeliverableButtonActionPerformed

	private void editDeliverableEditButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editDeliverableEditButtonActionPerformed
		String selection = null;
		if (editDeliverableAssignmentRadioButton.isSelected())
			selection = editDeliverableAssignmentRadioButton.getText();
		else if (editDeliverableExamRadioButton.isSelected())
			selection = editDeliverableExamRadioButton.getText();
		try {
			gradebook.getActiveCourse().editDeliverable(
					new Deliverable(editDeliverableNameText.getText(),
							selection, editDeliverableWeightText.getText()),
					editDeliverable);
			generateMenu();
			cl.show(inputPanel, "noInputPanel");
		} catch (InvalidInfoException ex) {
			String errorMessage = ex.getMessage();
			if (errorMessage.contains("name"))
				editDeliverableNameLabel.setForeground(Color.red);
			else
				editDeliverableNameLabel.setForeground(Color.black);
			if (errorMessage.contains("type"))
				editDeliverableTypeLabel.setForeground(Color.red);
			else
				editDeliverableTypeLabel.setForeground(Color.black);
			if (errorMessage.contains("weight"))
				editDeliverableWeightLabel.setForeground(Color.red);
			else
				editDeliverableWeightLabel.setForeground(Color.black);
			errorLabel.setText(errorMessage);
		} catch (ElementNotFoundException ex) {
			Logger.getLogger(team9_Gradebook.class.getName()).log(Level.SEVERE,
					null, ex);
		}
	}// GEN-LAST:event_editDeliverableEditButtonActionPerformed

	private void addCourseButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addCourseButtonActionPerformed

		addCourseCodeText.setText("");
		addCourseTitleText.setText("");
		addCourseTermText.setText("");
		addCourseCodeLabel.setForeground(Color.black);
		addCourseTitleLabel.setForeground(Color.black);
		addCourseTermLabel.setForeground(Color.black);
		cl.show(inputPanel, "addCoursePanel");
		addCourseCodeText.requestFocusInWindow();
		disableActiveCourseUI();
	}// GEN-LAST:event_addCourseButtonActionPerformed

	private void instructionsActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_instructionsActionPerformed
		instruc_dialog.setVisible(true);
	}// GEN-LAST:event_instructionsActionPerformed

	private void aboutActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_aboutActionPerformed
		about_dialog.setVisible(true);
	}// GEN-LAST:event_aboutActionPerformed

	private void importStudentsButtonActionPerformed(
            java.awt.event.ActionEvent evt) {

            File selectedFile = fileSelection("Import Students", "CSV Files", "csv");

            if(selectedFile != null) {
                try {
                    String message = gradebook.getActiveCourse().importStudents(selectedFile);
                    JOptionPane.showMessageDialog(null, message,"Import Students", JOptionPane.INFORMATION_MESSAGE);
                } catch (NoSuchMethodException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Warning - Importing Students", JOptionPane.WARNING_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Error - Importing Students", JOptionPane.ERROR_MESSAGE);
                }
                refreshTable(gradebook.getActiveCourse());
            }                
	}// GEN-LAST:event_importStudentsButtonActionPerformed
        
        private void importGradesButtonActionPerformed(
            java.awt.event.ActionEvent evt) {
            
            File selectedFile = fileSelection("Import Grades", "CSV Files", "csv");
            
            if(selectedFile != null) {
                try {
                    String message = gradebook.getActiveCourse().importGrades(selectedFile);
                    JOptionPane.showMessageDialog(null, message,"Import Grades", JOptionPane.INFORMATION_MESSAGE);
                } catch (NoSuchMethodException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Warning - Importing Grades", JOptionPane.WARNING_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Error - Importing Grades", JOptionPane.ERROR_MESSAGE);
                }
                refreshTable(gradebook.getActiveCourse());
            }
	}// GEN-LAST:event_importGradesButtonActionPerformed
        
        private File fileSelection(String title, String filetype, String filefilter){
            JFileChooser fc = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter(filetype, filefilter, filefilter);
            fc.setFileFilter(filter);
            int returnVal = fc.showDialog(null, title);

            if(returnVal == 0){
                return fc.getSelectedFile();
            } else {
                return null;
            }
        }
        
        private File fileSaveSelection(String filename, String filetype, String filefilter){
            JFileChooser fc = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter(filetype, filefilter, filefilter);
            fc.setFileFilter(filter);
            fc.setSelectedFile(new File(filename));
            int returnVal = fc.showSaveDialog(null);

            if(returnVal == 0){
                return fc.getSelectedFile();
            } else {
                return null;
            }
        }        

	private void exportGradesButtonActionPerformed(
            java.awt.event.ActionEvent evt) {
            
            File selectedFile = fileSaveSelection("exportedGrade", "CSV Files", "csv");
            
            if(selectedFile != null) {
                try {
                    String message = gradebook.getActiveCourse().exportGrades(selectedFile);
                    JOptionPane.showMessageDialog(null, message,"Export Grades", JOptionPane.INFORMATION_MESSAGE);
                    refreshTable(gradebook.getActiveCourse());
                } catch (NoSuchMethodException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Warning - Exporting Grades", JOptionPane.WARNING_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage(), "Error - Exporting Grades", JOptionPane.ERROR_MESSAGE);
                }
            }
            
	}// GEN-LAST:event_exportGradesButtonActionPerformed

	private void editDeliverableDeleteButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editDeliverableDeleteButtonActionPerformed
		Object[] options = { "Yes", "No" };
		int i = JOptionPane.showOptionDialog(null,
				"Are you sure you want to delete the deliverable?", "WARNING:",
				JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null,
				options, options[0]);
		if (i == 0) {
			try {
				gradebook.getActiveCourse().removeDeliverable(
						editDeliverable.getName());
				generateMenu();
				cl.show(inputPanel, "noInputPanel");

			} catch (ElementNotFoundException ex) {
				Logger.getLogger(team9_Gradebook.class.getName()).log(
						Level.SEVERE, null, ex);
			}
		}
	}// GEN-LAST:event_editDeliverableDeleteButtonActionPerformed

	private void editStudentDeleteButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editStudentDeleteButtonActionPerformed
		Object[] options = { "Yes", "No" };
		int i = JOptionPane.showOptionDialog(null,
				"Are you sure you want to remove the student?", "WARNING:",
				JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null,
				options, options[0]);
		if (i == 0) {
			try {
				gradebook.getActiveCourse().removeStudent(
						editStudent.getNumber());
				generateMenu();
				cl.show(inputPanel, "noInputPanel");

			} catch (ElementNotFoundException ex) {
				Logger.getLogger(team9_Gradebook.class.getName()).log(
						Level.SEVERE, null, ex);
			}
		}
	}// GEN-LAST:event_editStudentDeleteButtonActionPerformed

	private void editStudentCancelButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editStudentCancelButtonActionPerformed

		addCourseCancelButtonActionPerformed(evt);
	}// GEN-LAST:event_editStudentCancelButtonActionPerformed

	private void editStudentEditButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editStudentEditButtonActionPerformed
		try {
			gradebook.getActiveCourse().editStudent(
					new Student(editStudentFirstNameText.getText(),
							editStudentLastNameText.getText(),
							editStudentNumberText.getText(),
							editStudentEmailText.getText()), editStudent);
			generateMenu();
			cl.show(inputPanel, "noInputPanel");
		} catch (InvalidInfoException ex) {
			String errorMessage = ex.getMessage();
			if (errorMessage.contains("first"))
				editStudentFirstNameLabel.setForeground(Color.red);
			else
				editStudentFirstNameLabel.setForeground(Color.black);
			if (errorMessage.contains("last"))
				editStudentLastNameLabel.setForeground(Color.red);
			else
				editStudentLastNameLabel.setForeground(Color.black);
			if (errorMessage.contains("number")) {
				editStudentNumberLabel.setForeground(Color.red);
				editStudentNumberText
						.setToolTipText("Valid Student Number: unique 9 digit number");
			} else {
				editStudentNumberLabel.setForeground(Color.black);
				editStudentNumberText.setToolTipText("");
			}
			if (errorMessage.contains("email"))
				editStudentEmailLabel.setForeground(Color.red);
			else
				editStudentEmailLabel.setForeground(Color.black);
			errorLabel.setText(errorMessage);
		}
	}// GEN-LAST:event_editStudentEditButtonActionPerformed

	private void editStudentEmailTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editStudentEmailTextActionPerformed
		editStudentEditButtonActionPerformed(evt);
	}// GEN-LAST:event_editStudentEmailTextActionPerformed

	private void editStudentLastNameTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editStudentLastNameTextActionPerformed
		editStudentEmailText.requestFocusInWindow();
	}// GEN-LAST:event_editStudentLastNameTextActionPerformed

	private void editStudentFirstNameTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editStudentFirstNameTextActionPerformed
		editStudentLastNameText.requestFocusInWindow();
	}// GEN-LAST:event_editStudentFirstNameTextActionPerformed

	private void editStudentNumberTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editStudentNumberTextActionPerformed
		editStudentFirstNameText.requestFocusInWindow();
	}// GEN-LAST:event_editStudentNumberTextActionPerformed

	private void addStudentCancelButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addStudentCancelButtonActionPerformed

		addCourseCancelButtonActionPerformed(evt);
	}// GEN-LAST:event_addStudentCancelButtonActionPerformed

	private void addStudentAddButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addStudentAddButtonActionPerformed
		try {
			gradebook.getActiveCourse().addStudent(
					new Student(addStudentFirstNameText.getText(),
							addStudentLastNameText.getText(),
							addStudentNumberText.getText(), addStudentEmailText
									.getText()));
			generateMenu();
			cl.show(inputPanel, "noInputPanel");
		} catch (InvalidInfoException ex) {
			String errorMessage = ex.getMessage();
			if (errorMessage.contains("first"))
				addStudentFirstNameLabel.setForeground(Color.red);
			else
				addStudentFirstNameLabel.setForeground(Color.black);
			if (errorMessage.contains("last"))
				addStudentLastNameLabel.setForeground(Color.red);
			else
				addStudentLastNameLabel.setForeground(Color.black);
			if (errorMessage.contains("number")) {
				addStudentNumberLabel.setForeground(Color.red);
				addStudentNumberText
						.setToolTipText("Valid Student Number: unique 9 digit number");
			} else {
				addStudentNumberLabel.setForeground(Color.black);
				addStudentNumberText.setToolTipText("");
			}
			if (errorMessage.contains("email"))
				addStudentEmailLabel.setForeground(Color.red);
			else
				addStudentEmailLabel.setForeground(Color.black);
			errorLabel.setText(errorMessage);
		}
	}// GEN-LAST:event_addStudentAddButtonActionPerformed

	private void addStudentEmailTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addStudentEmailTextActionPerformed
		addStudentAddButtonActionPerformed(evt);
	}// GEN-LAST:event_addStudentEmailTextActionPerformed

	private void addStudentLastNameTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addStudentLastNameTextActionPerformed
		addStudentEmailText.requestFocusInWindow();
	}// GEN-LAST:event_addStudentLastNameTextActionPerformed

	private void addStudentFirstNameTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addStudentFirstNameTextActionPerformed
		addStudentLastNameText.requestFocusInWindow();
	}// GEN-LAST:event_addStudentFirstNameTextActionPerformed

	private void addStudentNumberTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addStudentNumberTextActionPerformed
		addStudentFirstNameText.requestFocusInWindow();
	}// GEN-LAST:event_addStudentNumberTextActionPerformed

	private void addDeliverableCancelButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addDeliverableCancelButtonActionPerformed

		addCourseCancelButtonActionPerformed(evt);
	}// GEN-LAST:event_addDeliverableCancelButtonActionPerformed

	private void addDeliverableAddButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addDeliverableAddButtonActionPerformed

		String selection = null;
		if (addDeliverableAssignmentRadioButton.isSelected())
			selection = addDeliverableAssignmentRadioButton.getText();
		else if (addDeliverableExamRadioButton.isSelected())
			selection = addDeliverableExamRadioButton.getText();
		try {
			gradebook.getActiveCourse().addDeliverable(
					new Deliverable(addDeliverableNameText.getText(),
							selection, addDeliverableWeightText.getText()));
			generateMenu();
			cl.show(inputPanel, "noInputPanel");
		} catch (InvalidInfoException ex) {
			String errorMessage = ex.getMessage();
			if (errorMessage.contains("name"))
				addDeliverableNameLabel.setForeground(Color.red);
			else
				addDeliverableNameLabel.setForeground(Color.black);
			if (errorMessage.contains("type"))
				addDeliverableTypeLabel.setForeground(Color.red);
			else
				addDeliverableTypeLabel.setForeground(Color.black);
			if (errorMessage.contains("weight"))
				addDeliverableWeightLabel.setForeground(Color.red);
			else
				addDeliverableWeightLabel.setForeground(Color.black);
			errorLabel.setText(errorMessage);
		}
	}// GEN-LAST:event_addDeliverableAddButtonActionPerformed

	private void addDeliverableWeightTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addDeliverableWeightTextActionPerformed
		addDeliverableAddButtonActionPerformed(evt);
	}// GEN-LAST:event_addDeliverableWeightTextActionPerformed

	private void generateReportButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_generateReportButtonActionPerformed
		int[] selectedRows = gradebookTable.getSelectedRows();
		int[] selectedColumns = gradebookTable.getSelectedColumns();
		errorLabel.setText("");
		if (selectedRows.length == 1 && selectedColumns.length == 1
				&& selectedColumns[0] == 0) {
			try {
				gradebook.getActiveCourse().genReport(
						(String) gradebookTable.getValueAt(selectedRows[0], 1));
			} catch (Exception ex) {
				System.out.println(ex.getMessage());
			}
		} else
			errorLabel.setText("Please select one student's name.");
	}// GEN-LAST:event_generateReportButtonActionPerformed

	private void emailStudentButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_emailStudentButtonActionPerformed
		int[] selectedRows = gradebookTable.getSelectedRows();
		int[] selectedColumns = gradebookTable.getSelectedColumns();
		String[] emails;
		String[] attachments;
		Student student;
		Course activeCourse = gradebook.getActiveCourse();
		MailParameters mailParam = gradebook.getMailParam();
		errorLabel.setText("");

		if (selectedRows.length > 0 && selectedColumns.length == 1
				&& selectedColumns[0] == 0) {
			emails = new String[selectedRows.length];
			attachments = new String[selectedRows.length];
			for (int i = 0; i < selectedRows.length; i++) {
				student = activeCourse.getStudent((String) gradebookTable
						.getValueAt(selectedRows[i], 1));
				emails[i] = student.getEmail();
				attachments[i] = student.getEmail().substring(0,
						student.getEmail().indexOf("@"))
						+ ".pdf";
				try {
					activeCourse.genReport(student.getNumber());
				} catch (Exception ex) {
					Logger.getLogger(team9_Gradebook.class.getName()).log(
							Level.SEVERE, null, ex);
				}
			}
			try {
				activeCourse.email(emails, attachments, activeCourse, "",
						mailParam.getHostname(), mailParam.getUsername(),
						mailParam.getPassword(), mailParam.getPort(),
						mailParam.getAuth(), mailParam.getTls(),
						mailParam.getSenderName(), mailParam.getSenderEmail(),
						mailParam.getSubject());
			} catch (Exception ex) {
				System.out.println(ex.getMessage());
				Logger.getLogger(team9_Gradebook.class.getName()).log(
						Level.SEVERE, null, ex);
			}
		} else
			errorLabel.setText("Please select one or more student names.");
	}// GEN-LAST:event_emailStudentButtonActionPerformed

	private void editPortTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editPortTextActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_editPortTextActionPerformed

	private void editEmailCancelButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editEmailCancelButtonActionPerformed
		addCourseCancelButtonActionPerformed(evt);
	}// GEN-LAST:event_editEmailCancelButtonActionPerformed

	private void editEmailEditButtonActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editEmailEditButtonActionPerformed
		gradebook.editMailParameters(editHostText.getText(),
				editUsernameText.getText(), editPasswordText.getText(),
				editSenderNameText.getText(), editSenderEmailText.getText(),
				editPortText.getText());
		generateMenu();
		cl.show(inputPanel, "noInputPanel");
	}// GEN-LAST:event_editEmailEditButtonActionPerformed

	private void editSenderEmailTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editSenderEmailTextActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_editSenderEmailTextActionPerformed

	private void editSenderNameTextActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editSenderNameTextActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_editSenderNameTextActionPerformed

	private void editPasswordTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editPasswordTextActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_editPasswordTextActionPerformed

	private void editUsernameTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editUsernameTextActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_editUsernameTextActionPerformed

	private void editHostTextActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editHostTextActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_editHostTextActionPerformed

	private void mailPropsActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_mailPropsActionPerformed
		MailParameters mailParam = gradebook.getMailParam();
		editHostText.setText(mailParam.getHostname());
		editUsernameText.setText(mailParam.getUsername());
		editPasswordText.setText(mailParam.getPassword());
		editSenderNameText.setText(mailParam.getSenderName());
		editSenderEmailText.setText(mailParam.getSenderEmail());
		editPortText.setText(mailParam.getPort());
		cl.show(inputPanel, "editMailPropertiesPanel");
		editHostText.requestFocusInWindow();
		disableActiveCourseUI();
	}// GEN-LAST:event_mailPropsActionPerformed

	private void generateMenu() {

		Vector courseVector = new Vector(gradebook.getCourseList());
		activeCourseComboBox.setModel(new javax.swing.DefaultComboBoxModel(
				courseVector));
		Course activeCourse = gradebook.getActiveCourse();
		errorLabel.setText("");
		enableActiveCourseUI();
		if (activeCourse != null) {
			activeCoursePanel.setVisible(true);
			activeCourseLabel.setText("<html>" + activeCourse.getTitle() + " "
					+ activeCourse.getCode() + " " + activeCourse.getTerm()
					+ "</html>");
			gradebookTable.setVisible(true);
			gradebookScrollPane.setVisible(true);
			refreshTable(activeCourse);
		} else {
			activeCoursePanel.setVisible(false);
			gradebookTable.setVisible(false);
			gradebookScrollPane.setVisible(false);
		}
	}

	private void refreshTable(Course activeCourse) {
		gradebookTable.setModel(new GradebookTableModel(activeCourse));
		gradebookTable.setAutoResizeMode(AUTO_RESIZE_OFF);
		setColumnWidths();
		gradebookTable.setAutoCreateRowSorter(true);
		gradebookTable.setDefaultRenderer(Double.class,
				new PercentCellRenderer());
		gradebookTable.getInputMap().put(
				KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "startEditing");

		InputMap inputMap = gradebookTable
				.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
		ActionMap actionMap = gradebookTable.getActionMap();

		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_DELETE, 0), "DELETE");
		actionMap.put("DELETE", new AbstractAction() {
			public void actionPerformed(ActionEvent e) {
				try {
					removeSelected();
				} catch (ElementNotFoundException ex) {
					Logger.getLogger(team9_Gradebook.class.getName()).log(
							Level.SEVERE, null, ex);
				}
			}
		});

		gradebookTable.addMouseListener(new MouseAdapter() {
			public void mousePressed(MouseEvent e) {
				if (e.getClickCount() == 2) {
					if (gradebookTable.isEnabled())
						doubleClickEditStudent(
								gradebookTable.rowAtPoint(e.getPoint()),
								gradebookTable.columnAtPoint(e.getPoint()));
				}
			}
		});

		// listener
		gradebookTable.getTableHeader().addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				int col = gradebookTable.columnAtPoint(e.getPoint());
				if (col > 4) {
					if (e.getClickCount() == 2) {
						if (gradebookTable.isEnabled())
							doubleClickEditColumn(col);
					}
					/*
					 * else { int rowCount =
					 * gradebookTable.getModel().getRowCount() - 1;
					 * gradebookTable.requestFocusInWindow();
					 * gradebookTable.clearSelection();
					 * gradebookTable.addColumnSelectionInterval(col, col); if
					 * (rowCount >= 0) gradebookTable.addRowSelectionInterval(0,
					 * rowCount); }
					 */
				}
			}
		});
	}

	private void doubleClickEditColumn(int col) {
		Course activeCourse = gradebook.getActiveCourse();
		String deliverableName = gradebookTable.getColumnName(col);
		int endIndex = deliverableName.indexOf("<br>");
		deliverableName = deliverableName.substring(12, endIndex);
		try {
			editDeliverable = activeCourse.getDeliverable(deliverableName);
		} catch (ElementNotFoundException ex) {
			Logger.getLogger(team9_Gradebook.class.getName()).log(Level.SEVERE,
					null, ex);
		}
		editDeliverableNameText.setText(editDeliverable.getName());
		if (editDeliverable.getType().equals("Exam"))
			editDeliverableExamRadioButton.setSelected(true);
		else
			editDeliverableAssignmentRadioButton.setSelected(true);
		editDeliverableWeightText.setText(Double.toString(editDeliverable
				.getWeight()));
		editDeliverableNameLabel.setForeground(Color.black);
		editDeliverableTypeLabel.setForeground(Color.black);
		editDeliverableWeightLabel.setForeground(Color.black);
		cl.show(inputPanel, "editDeliverablePanel");
		editDeliverableNameText.requestFocusInWindow();
		disableActiveCourseUI();

	}

	private void doubleClickEditStudent(int row, int col) {
		Course activeCourse = gradebook.getActiveCourse();
		try {
			Robot robot = new Robot();
			if (col > 4) {
				// robot.keyPress(KeyEvent.VK_ENTER);
				// robot.keyRelease(KeyEvent.VK_ENTER);
			} else if (col == 0) {
				editStudent = activeCourse.getStudent((String) gradebookTable
						.getValueAt(row, 1));
				editStudentNumberText.setText(editStudent.getNumber());
				editStudentFirstNameText.setText(editStudent.getFirstName());
				editStudentLastNameText.setText(editStudent.getLastName());
				editStudentEmailText.setText(editStudent.getEmail());
				editStudentNumberLabel.setForeground(Color.black);
				editStudentFirstNameLabel.setForeground(Color.black);
				editStudentLastNameLabel.setForeground(Color.black);
				editStudentEmailLabel.setForeground(Color.black);
				cl.show(inputPanel, "editStudentPanel");
				editStudentNumberText.requestFocusInWindow();
				disableActiveCourseUI();
			}
		} catch (AWTException ex) {
			Logger.getLogger(team9_Gradebook.class.getName()).log(Level.SEVERE,
					null, ex);
		}
	}

	private void removeSelected() throws ElementNotFoundException {
		Course activeCourse = gradebook.getActiveCourse();
		int[] selectedRows = gradebookTable.getSelectedRows();
		int[] selectedColumns = gradebookTable.getSelectedColumns();
		int selectedColumn = gradebookTable.getSelectedColumn();

		if (selectedColumns.length == 1) {
			if (selectedRows.length > 0 && selectedColumn == 0) {

				Object[] options = { "Yes", "No" };
				int j = JOptionPane
						.showOptionDialog(
								null,
								"Are you sure you want to delete the selected student(s)",
								"WARNING:", JOptionPane.DEFAULT_OPTION,
								JOptionPane.WARNING_MESSAGE, null, options,
								options[0]);
				if (j == 0)
					for (int i = 0; i < selectedRows.length; i++)
						if (selectedColumn == 0)
							activeCourse.removeStudent((String) gradebookTable
									.getValueAt(selectedRows[i], 1));
			}
			if (selectedColumns.length > 0 || selectedRows.length > 0) {
				refreshTable(activeCourse);
			}
		}
	}

	private void disableActiveCourseUI() {
		for (Component componentDisabled : activeCoursePanel.getComponents())
			componentDisabled.setEnabled(false);
		gradebookTable.clearSelection();
		if (gradebookTable.getCellEditor() != null)
			gradebookTable.getCellEditor().cancelCellEditing();
		gradebookTable.setEnabled(false);
		gradebookTable.setOpaque(false);
		JTableHeader header = gradebookTable.getTableHeader();
		header.setEnabled(false);
		header.setOpaque(false);
		((DefaultTableCellRenderer) gradebookTable
				.getDefaultRenderer(Object.class)).setOpaque(false);
		((DefaultTableCellRenderer) gradebookTable
				.getDefaultRenderer(Double.class)).setOpaque(false);
	}

	private void enableActiveCourseUI() {
		for (Component componentEnabled : activeCoursePanel.getComponents())
			componentEnabled.setEnabled(true);
		gradebookTable.setEnabled(true);
		gradebookTable.setOpaque(true);
		JTableHeader header = gradebookTable.getTableHeader();
		header.setEnabled(true);
		header.setOpaque(true);
		((DefaultTableCellRenderer) gradebookTable
				.getDefaultRenderer(Object.class)).setOpaque(true);
		((DefaultTableCellRenderer) gradebookTable
				.getDefaultRenderer(Double.class)).setOpaque(true);
	}

	private void setColumnWidths() {
		int columnCount = gradebookTable.getModel().getColumnCount();
		int currentDeliverable = 5;
		gradebookTable.getColumnModel().getColumn(0).setPreferredWidth(100);
		gradebookTable.getColumnModel().getColumn(1).setPreferredWidth(100);
		gradebookTable.getColumnModel().getColumn(2).setPreferredWidth(100);
		gradebookTable.getColumnModel().getColumn(3).setPreferredWidth(80);
		gradebookTable.getColumnModel().getColumn(4).setPreferredWidth(80);
		for (int i = 5; i < columnCount; i++) {
			gradebookTable.getColumnModel().getColumn(i).setPreferredWidth(130);
		}
	}

	/**
	 * Save the dat file
	 */
	public static void saveDAT(String filename) {
		if (filename.equals("")) {
			filename = "gradebook.dat";
		}
		try {
			try (ObjectOutputStream out = new ObjectOutputStream(
					new FileOutputStream(filename))) {
				out.writeObject(gradebook);
				out.close();
			}
		} catch (IOException ex) {
			ex.printStackTrace();
		}
	}

	/**
	 * Opening an existing dat file
	 */
	public void openDAT() {
		File dat = new File("gradebook.dat");
		if (!dat.exists()) {
			saveDAT("");
		}

		try {
			ObjectInputStream in = new ObjectInputStream(new FileInputStream(
					"gradebook.dat"));
			Gradebook loadGB = (Gradebook) in.readObject();
			in.close();

			// It should be revised!!!
			gradebook = loadGB;

			// When it starts display screen to select active course
			generateMenu();

		} catch (IOException ex) {
			ex.printStackTrace();
		} catch (ClassNotFoundException clEx) {
			clEx.printStackTrace();
		}
	}

	/**
	 * limit number of characters
	 */
	public class JTextFieldLimit extends PlainDocument {
		private int limit;

		JTextFieldLimit(int limit) {
			super();
			this.limit = limit;
		}

		public void insertString(int offset, String str, AttributeSet attr)
				throws BadLocationException {
			if (str == null)
				return;

			if ((getLength() + str.length()) <= limit) {
				super.insertString(offset, str, attr);
			}
		}
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed"
		// desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(team9_Gradebook.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(team9_Gradebook.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(team9_Gradebook.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(team9_Gradebook.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new team9_Gradebook().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JDialog about_dialog;
    private javax.swing.JTextArea about_message;
    private javax.swing.JComboBox activeCourseComboBox;
    private javax.swing.JLabel activeCourseLabel;
    private javax.swing.JPanel activeCoursePanel;
    private javax.swing.JButton addCourseAddButton;
    private javax.swing.JButton addCourseButton;
    private javax.swing.JButton addCourseCancelButton;
    private javax.swing.JLabel addCourseCodeLabel;
    private javax.swing.JTextField addCourseCodeText;
    private javax.swing.JLabel addCourseInstructionLabel;
    private javax.swing.JPanel addCoursePanel;
    private javax.swing.JLabel addCourseTermLabel;
    private javax.swing.JTextField addCourseTermText;
    private javax.swing.JLabel addCourseTitleLabel;
    private javax.swing.JTextField addCourseTitleText;
    private javax.swing.JButton addDeliverableAddButton;
    private javax.swing.JRadioButton addDeliverableAssignmentRadioButton;
    private javax.swing.JButton addDeliverableButton;
    private javax.swing.JButton addDeliverableCancelButton;
    private javax.swing.JRadioButton addDeliverableExamRadioButton;
    private javax.swing.JLabel addDeliverableInstructionLabel;
    private javax.swing.JLabel addDeliverableNameLabel;
    private javax.swing.JTextField addDeliverableNameText;
    private javax.swing.JPanel addDeliverablePanel;
    private javax.swing.JLabel addDeliverablePercentLabel;
    private javax.swing.ButtonGroup addDeliverableTypeButtonGroup;
    private javax.swing.JLabel addDeliverableTypeLabel;
    private javax.swing.JLabel addDeliverableWeightLabel;
    private javax.swing.JTextField addDeliverableWeightText;
    private javax.swing.JButton addStudentAddButton;
    private javax.swing.JButton addStudentButton;
    private javax.swing.JButton addStudentCancelButton;
    private javax.swing.JLabel addStudentEmailLabel;
    private javax.swing.JTextField addStudentEmailText;
    private javax.swing.JLabel addStudentFirstNameLabel;
    private javax.swing.JTextField addStudentFirstNameText;
    private javax.swing.JLabel addStudentInstructionLabel;
    private javax.swing.JLabel addStudentLastNameLabel;
    private javax.swing.JTextField addStudentLastNameText;
    private javax.swing.JLabel addStudentNumberLabel;
    private javax.swing.JTextField addStudentNumberText;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JButton deleteCourseButton;
    private javax.swing.JButton editCourseButton;
    private javax.swing.JButton editCourseCancelButton;
    private javax.swing.JLabel editCourseCodeLabel;
    private javax.swing.JTextField editCourseCodeText;
    private javax.swing.JButton editCourseEditButton;
    private javax.swing.JLabel editCourseInstructionLabel;
    private javax.swing.JPanel editCoursePanel;
    private javax.swing.JLabel editCourseTermLabel;
    private javax.swing.JTextField editCourseTermText;
    private javax.swing.JLabel editCourseTitleLabel;
    private javax.swing.JTextField editCourseTitleText;
    private javax.swing.JRadioButton editDeliverableAssignmentRadioButton;
    private javax.swing.JButton editDeliverableCancelButton;
    private javax.swing.JButton editDeliverableDeleteButton;
    private javax.swing.JButton editDeliverableEditButton;
    private javax.swing.JRadioButton editDeliverableExamRadioButton;
    private javax.swing.JLabel editDeliverableInstructionLabel;
    private javax.swing.JLabel editDeliverableNameLabel;
    private javax.swing.JTextField editDeliverableNameText;
    private javax.swing.JPanel editDeliverablePanel;
    private javax.swing.JLabel editDeliverablePercentLabel;
    private javax.swing.ButtonGroup editDeliverableTypeButtonGroup;
    private javax.swing.JLabel editDeliverableTypeLabel;
    private javax.swing.JLabel editDeliverableWeightLabel;
    private javax.swing.JTextField editDeliverableWeightText;
    private javax.swing.JButton editEmailCancelButton;
    private javax.swing.JButton editEmailEditButton;
    private javax.swing.JLabel editEmailInstructionLabel;
    private javax.swing.JLabel editHostLabel;
    private javax.swing.JTextField editHostText;
    private javax.swing.JPanel editMailPropertiesPanel;
    private javax.swing.JLabel editPasswordLabel;
    private javax.swing.JTextField editPasswordText;
    private javax.swing.JLabel editPortLabel;
    private javax.swing.JTextField editPortText;
    private javax.swing.JLabel editSenderEmailLabel;
    private javax.swing.JTextField editSenderEmailText;
    private javax.swing.JLabel editSenderNameLabel;
    private javax.swing.JTextField editSenderNameText;
    private javax.swing.JButton editStudentCancelButton;
    private javax.swing.JButton editStudentDeleteButton;
    private javax.swing.JButton editStudentEditButton;
    private javax.swing.JLabel editStudentEmailLabel;
    private javax.swing.JTextField editStudentEmailText;
    private javax.swing.JLabel editStudentFirstNameLabel;
    private javax.swing.JTextField editStudentFirstNameText;
    private javax.swing.JLabel editStudentInstructionLabel;
    private javax.swing.JLabel editStudentLastNameLabel;
    private javax.swing.JTextField editStudentLastNameText;
    private javax.swing.JLabel editStudentNumberLabel;
    private javax.swing.JTextField editStudentNumberText;
    private javax.swing.JPanel editStudentPanel;
    private javax.swing.JLabel editUsernameLabel;
    private javax.swing.JTextField editUsernameText;
    private javax.swing.JButton emailStudentButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton exportGradesButton;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton generateReportButton;
    private javax.swing.JScrollPane gradebookScrollPane;
    private javax.swing.JTable gradebookTable;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton importGradesButton;
    private javax.swing.JButton importStudentsButton;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JDialog instruc_dialog;
    private javax.swing.JTextArea instruct_message;
    private javax.swing.JMenuItem instructions;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenu mailPropertiesMenu;
    private javax.swing.JMenuItem mailProps;
    private javax.swing.JMenuBar menu;
    private javax.swing.JMenu menuFile;
    private javax.swing.JPanel noInputPanel;
    private javax.swing.JMenuItem open;
    private javax.swing.JMenuItem save;
    private javax.swing.JLabel setActiveCourseLabel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables
}
